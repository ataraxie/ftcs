}
sample_data$n_precision <- aux
plot_data <- summarise(group_by(sample_data, threshold, n_topics),
top_precision=mean(top_precision), top_likelihood=mean(top_likelihood),
n_precision=mean(n_precision), n_likelihood=mean(n_likelihood))
plot_data <- merge(plot_data, coverage_data)
plot_data %>%
ggplot(aes(x = threshold, y = top_likelihood)) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="Likelihood", breaks = seq(0, 1, by = 0.05)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0.0, 1.0, by = 0.1)) +
theme_bw() + theme(text=element_text(size=20)) +
coord_cartesian(ylim=c(0, 0.3))
plot_data
View(plot_data)
View(script_sample_data)
script_sample_data = read.csv("/Users/Arthur/Workspace/BugAnalysisRecommender/patterny/results/partial_results.csv")
script_sample_data = read.csv("/Users/Arthur/Workspace/BugAnalysisRecommender/patterny/results/results_n25.csv")
coverage_data <- script_sample_data %>%
group_by(threshold, n_topics) %>%
summarise(
top_coverage=(
(sum(top_likelihood != "-1") - sum(top_likelihood == "None")) / sum(top_likelihood != "-1")
), n_coverage=(
(sum(n_likelihood != "-1") - sum(n_likelihood == "None")) / sum(n_likelihood != "-1")
)
)
which(script_sample_data$top_precision == "None")
options(digits=8)
sample_data <- filter(script_sample_data, top_precision != "None"
& top_likelihood != "None"
& n_precision != "None"
& n_likelihood != "None")
aux <- c()
for (p in sample_data$top_precision){
aux <- c(aux, as.numeric(p))
}
sample_data$top_precision <- aux
aux <- c()
for (p in sample_data$top_likelihood){
aux <- c(aux, as.numeric(p))
}
sample_data$top_likelihood <- aux
aux <- c()
for (p in sample_data$n_likelihood){
aux <- c(aux, as.numeric(p))
}
sample_data$n_likelihood <- aux
aux <- c()
for (p in sample_data$n_precision){
aux <- c(aux, as.numeric(p))
}
sample_data$n_precision <- aux
plot_data <- summarise(group_by(sample_data, threshold, n_topics),
top_precision=mean(top_precision), top_likelihood=mean(top_likelihood),
n_precision=mean(n_precision), n_likelihood=mean(n_likelihood))
plot_data <- merge(plot_data, coverage_data)
require("ggplot2")
require("dplyr")
require("gridExtra")
require("pander")
require("irr")
require("effsize")
x <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8)
y <- c(0.7, 0.6, 0.5, 0.2, 0.1, 0.0, 0.0, 0.0, 0.0)
dat <- data.frame(threshold=x, precision=y)
dat %>%
ggplot(aes(x = threshold, y = precision)) +
geom_point() + geom_line() +
scale_y_continuous(name="Precision", breaks = seq(0, 0.8, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.2)) +
theme_bw() + coord_fixed()
n25_data = read.csv("/Users/Arthur/Workspace/BugAnalysisRecommender/patterny/results/inc_004_n_25.csv")
n25_data %>%
ggplot(aes(x = threshold, y = precision)) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="Precision", breaks = seq(0, 1, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
theme_bw() + coord_fixed()
# geom_point(data=n25_data, aes(x = threshold, y = coverage)) + geom_line(data=n25_data, aes(x = threshold, y = coverage)) +
n25_data %>%
ggplot(aes(x = threshold, y = coverage)) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="Coverage", breaks = seq(0, 1, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
theme_bw() + coord_fixed()
# Current data:
script_sample_data = read.csv("/Users/Arthur/Workspace/BugAnalysisRecommender/patterny/results/partial_results.csv")
script_sample_data = read.csv("/Users/Arthur/Workspace/BugAnalysisRecommender/patterny/results/results_n25.csv")
coverage_data <- script_sample_data %>%
group_by(threshold, n_topics) %>%
summarise(
top_coverage=(
(sum(top_likelihood != "-1") - sum(top_likelihood == "None")) / sum(top_likelihood != "-1")
), n_coverage=(
(sum(n_likelihood != "-1") - sum(n_likelihood == "None")) / sum(n_likelihood != "-1")
)
)
which(script_sample_data$top_precision == "None")
options(digits=8)
sample_data <- filter(script_sample_data, top_precision != "None"
& top_likelihood != "None"
& n_precision != "None"
& n_likelihood != "None")
aux <- c()
for (p in sample_data$top_precision){
aux <- c(aux, as.numeric(p))
}
sample_data$top_precision <- aux
aux <- c()
for (p in sample_data$top_likelihood){
aux <- c(aux, as.numeric(p))
}
sample_data$top_likelihood <- aux
aux <- c()
for (p in sample_data$n_likelihood){
aux <- c(aux, as.numeric(p))
}
sample_data$n_likelihood <- aux
aux <- c()
for (p in sample_data$n_precision){
aux <- c(aux, as.numeric(p))
}
sample_data$n_precision <- aux
plot_data <- summarise(group_by(sample_data, threshold, n_topics),
top_precision=mean(top_precision), top_likelihood=mean(top_likelihood),
n_precision=mean(n_precision), n_likelihood=mean(n_likelihood))
plot_data <- merge(plot_data, coverage_data)
plot_data %>%
ggplot(aes(x = threshold, y = n_coverage)) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="Coverage", breaks = seq(0, 1, by = 0.1)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0.0, 1.0, by = 0.1)) +
theme_bw() + theme(text=element_text(size=20))
n25_data %>%
ggplot(aes(x = threshold, y = coverage)) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="Coverage", breaks = seq(0, 1, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
theme_bw() + coord_fixed()
plot_data
View(plot_data)
plot_data[1,]
plot_data[2,]
plot_data[2:4,]
plot_data[2:,]
len(plot_data)
length(plot_data)
length(plot_data$threshold)
plot_data[2:length(plot_data$threshold),]
plot_data[2:length(plot_data$threshold),] %>%
ggplot(aes(x = threshold, y = n_coverage)) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="Coverage", breaks = seq(0, 1, by = 0.1)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0.0, 1.0, by = 0.1)) +
theme_bw() + theme(text=element_text(size=20))
plot_data %>%
ggplot(aes(x = threshold, y = n_likelihood)) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="Likelihood", breaks = seq(0, 1, by = 0.05)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0.0, 1.0, by = 0.1)) +
theme_bw() + theme(text=element_text(size=20))+
coord_cartesian(ylim=c(0, 0.3))
plot_data %>%
ggplot(aes(x = threshold, y = n_likelihood)) +
geom_point(data=plot_data, aes(x = threshold, y = n_coverage), shape=1) + geom_line(data=plot_data, aes(x = threshold, y = n_coverage), linetype = 2) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="", breaks = seq(0, 1, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
theme_bw()
plot_data %>%
ggplot(aes(x = threshold, y = n_likelihood)) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="Likelihood", breaks = seq(0, 1, by = 0.05)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0.0, 1.0, by = 0.1)) +
theme_bw() + theme(text=element_text(size=20)) +
coord_cartesian(ylim=c(0, 0.3))
plot_data %>%
ggplot(aes(x = threshold, y = top_likelihood)) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="Likelihood", breaks = seq(0, 1, by = 0.05)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0.0, 1.0, by = 0.1)) +
theme_bw() + theme(text=element_text(size=20)) +
coord_cartesian(ylim=c(0, 0.3))
plot_data %>%
ggplot(aes(x = threshold, y = n_likelihood)) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="Likelihood", breaks = seq(0, 1, by = 0.05)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0.0, 1.0, by = 0.1)) +
theme_bw() + theme(text=element_text(size=20)) +
coord_cartesian(ylim=c(0, 0.3))
plot_data %>%
ggplot(aes(x = threshold, y = n_likelihood)) +
geom_point(data=plot_data, aes(x = threshold, y = n_coverage), shape=1) + geom_line(data=plot_data, aes(x = threshold, y = n_coverage), linetype = 2) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="", breaks = seq(0, 1, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
theme_bw()
require("ggplot2")
require("dplyr")
require("gridExtra")
require("pander")
require("irr")
require("effsize")
x <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8)
y <- c(0.7, 0.6, 0.5, 0.2, 0.1, 0.0, 0.0, 0.0, 0.0)
dat <- data.frame(threshold=x, precision=y)
dat %>%
ggplot(aes(x = threshold, y = precision)) +
geom_point() + geom_line() +
scale_y_continuous(name="Precision", breaks = seq(0, 0.8, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.2)) +
theme_bw() + coord_fixed()
n25_data = read.csv("/Users/Arthur/Workspace/BugAnalysisRecommender/patterny/results/inc_004_n_25.csv")
n25_data %>%
ggplot(aes(x = threshold, y = precision)) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="Precision", breaks = seq(0, 1, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
theme_bw() + coord_fixed()
# geom_point(data=n25_data, aes(x = threshold, y = coverage)) + geom_line(data=n25_data, aes(x = threshold, y = coverage)) +
n25_data %>%
ggplot(aes(x = threshold, y = coverage)) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="Coverage", breaks = seq(0, 1, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
theme_bw() + coord_fixed()
# Current data:
script_sample_data = read.csv("/Users/Arthur/Workspace/BugAnalysisRecommender/patterny/results/partial_results.csv")
script_sample_data = read.csv("/Users/Arthur/Workspace/BugAnalysisRecommender/patterny/results/results_n25.csv")
coverage_data <- script_sample_data %>%
group_by(threshold, n_topics) %>%
summarise(
top_coverage=(
(sum(top_likelihood != "-1") - sum(top_likelihood == "None")) / sum(top_likelihood != "-1")
), n_coverage=(
(sum(n_likelihood != "-1") - sum(n_likelihood == "None")) / sum(n_likelihood != "-1")
)
)
which(script_sample_data$top_precision == "None")
options(digits=8)
sample_data <- filter(script_sample_data, top_precision != "None"
& top_likelihood != "None"
& n_precision != "None"
& n_likelihood != "None")
aux <- c()
for (p in sample_data$top_precision){
aux <- c(aux, as.numeric(p))
}
sample_data$top_precision <- aux
aux <- c()
for (p in sample_data$top_likelihood){
aux <- c(aux, as.numeric(p))
}
sample_data$top_likelihood <- aux
aux <- c()
for (p in sample_data$n_likelihood){
aux <- c(aux, as.numeric(p))
}
sample_data$n_likelihood <- aux
aux <- c()
for (p in sample_data$n_precision){
aux <- c(aux, as.numeric(p))
}
sample_data$n_precision <- aux
plot_data <- summarise(group_by(sample_data, threshold, n_topics),
top_precision=mean(top_precision), top_likelihood=mean(top_likelihood),
n_precision=mean(n_precision), n_likelihood=mean(n_likelihood))
plot_data <- merge(plot_data, coverage_data)
plot_data %>%
ggplot(aes(x = threshold, y = n_likelihood)) +
geom_point(data=plot_data, aes(x = threshold, y = n_coverage), shape=1) + geom_line(data=plot_data, aes(x = threshold, y = n_coverage), linetype = 2) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="", breaks = seq(0, 1, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
theme_bw()
plot_data %>%
ggplot(aes(x = threshold, y = n_likelihood)) +
geom_point(data=plot_data, aes(x = threshold, y = n_coverage), shape=1) +
geom_line(data=plot_data, aes(x = threshold, y = n_coverage), linetype = 2) +
geom_point(shape=0) +
geom_line(linetype = 1, label) +
scale_y_continuous(name="", breaks = seq(0, 1, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
theme_bw(labels = c("Y2", "Y1"))
scale_color_discrete(name = "Y series", labels = c("Y2", "Y1"))
plot_data %>%
ggplot(aes(x = threshold, y = n_likelihood)) +
geom_point(data=plot_data, aes(x = threshold, y = n_coverage), shape=1) +
geom_line(data=plot_data, aes(x = threshold, y = n_coverage), linetype = 2) +
geom_point(shape=0) +
geom_line(linetype = 1, label) +
scale_y_continuous(name="", breaks = seq(0, 1, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
scale_color_discrete(name = "Y series", labels = c("Y2", "Y1"))
theme_bw()
plot_data %>%
ggplot(aes(x = threshold, y = n_likelihood)) +
geom_point(data=plot_data, aes(x = threshold, y = n_coverage), shape=1) +
geom_line(data=plot_data, aes(x = threshold, y = n_coverage), linetype = 2) +
geom_point(shape=0) +
geom_line(linetype = 1, label) +
scale_y_continuous(name="", breaks = seq(0, 1, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
scale_color_discrete(name = "Y series", labels = c("Y2", "Y1")) +
theme_bw()
plot_data %>%
ggplot(aes(x = threshold, y = n_likelihood)) +
geom_point(data=plot_data, aes(x = threshold, y = n_coverage), shape=1) +
geom_line(data=plot_data, aes(x = threshold, y = n_coverage), linetype = 2) +
geom_point(shape=0) +
geom_line(linetype = 1) +
scale_y_continuous(name="", breaks = seq(0, 1, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
scale_color_discrete(name = "Y series", labels = c("Y2", "Y1")) +
theme_bw()
plot_data %>%
ggplot(aes(x = threshold, y = n_likelihood)) +
geom_point(data=plot_data, aes(x = threshold, y = n_coverage), shape=1) +
geom_line(data=plot_data, aes(x = threshold, y = n_coverage), linetype = 2) +
geom_point(shape=0) +
geom_line(linetype = 1) +
scale_y_continuous(name="", breaks = seq(0, 1, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
scale_color_discrete(name = "Y series", labels = c("n_likelihood", "n_coverage")) +
theme_bw()
plot_data %>%
ggplot(aes(x = threshold, y = n_likelihood)) +
#geom_point(data=plot_data, aes(x = threshold, y = n_coverage), shape=1) +
geom_line(data=plot_data, aes(x = threshold, y = n_coverage), linetype = 2) +
#geom_point(shape=0) +
geom_line(linetype = 1) +
scale_y_continuous(name="", breaks = seq(0, 1, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
scale_color_discrete(name = "Y series", labels = c("n_likelihood", "n_coverage")) +
theme_bw()
plot_data %>%
ggplot(aes(x = threshold, y = n_likelihood)) +
#geom_point(data=plot_data, aes(x = threshold, y = n_coverage), shape=1) +
geom_line(data=plot_data, aes(x = threshold, y = n_coverage), linetype = 2) +
#geom_point(shape=0) +
geom_line(linetype = 1) +
scale_y_continuous(name="", breaks = seq(0, 1, by = 0.1)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
scale_color_discrete(name = "Y series", labels = c("n_likelihood", "n_coverage")) +
theme_bw()
require("ggplot2")
require("dplyr")
require("gridExtra")
require("pander")
require("irr")
require("effsize")
head <- c('bug_id', 'prob')
uids <- c('346140_0', '346140_1', '346140_2', '346140_3', '346140_4', '340007_0', '340007_1', '340007_2', '340007_3', '340007_4', '342081_0', '342081_1', '342081_2', '342081_3', '342081_4', '243827_0', '243827_1', '243827_2', '243827_3', '243827_4', '348318_0', '348318_1', '348318_2', '348318_3', '348318_4', '346275_0', '346275_1', '346275_2', '346275_3', '346275_4', '340147_0', '340147_1', '340147_2', '340147_3', '340147_4', '194763_0', '194763_1', '194763_2', '194763_3', '194763_4', '244091_0', '244091_1', '244091_2', '244091_3', '244091_4', '307492_0', '307492_1', '307492_2', '307492_3', '307492_4', '311594_0', '311594_1', '311594_2', '311594_3', '311594_4')
bug <- c('346140', '346140', '346140', '346140', '346140', '340007', '340007', '340007', '340007', '340007', '342081', '342081', '342081', '342081', '342081', '243827', '243827', '243827', '243827', '243827', '348318', '348318', '348318', '348318', '348318', '346275', '346275', '346275', '346275', '346275', '340147', '340147', '340147', '340147', '340147', '194763', '194763', '194763', '194763', '194763', '244091', '244091', '244091', '244091', '244091', '307492', '307492', '307492', '307492', '307492', '311594', '311594', '311594', '311594', '311594')
probs <- c(0.368, 0.268, 0.263, 0.231, 0.216, 0.123, 0.112, 0.100, 0.100, 0.096, 0.180, 0.169, 0.160, 0.139, 0.139, 0.214, 0.207, 0.154, 0.153, 0.138, 0.129, 0.110, 0.090, 0.087, 0.086, 0.080, 0.060, 0.057, 0.055, 0.053, 0.399, 0.339, 0.310, 0.296, 0.243, 0.229, 0.124, 0.120, 0.118, 0.092, 0.324, 0.306, 0.286, 0.284, 0.245, 0.352, 0.179, 0.121, 0.116, 0.111, 0.132, 0.124, 0.100, 0.088, 0.086)
bid <- c('346140', '346140', '346140', '346140', '346140')
ids <- c('346140_1', '346140_2', '346140_3', '346140_4', '346140_5')
probs <- c(0.368, 0.268, 0.263, 0.231, 0.216)
dat <- data.frame(bug=bug, uids=uids, probs=probs)
dat %>%
ggplot(aes(x = uids, y = probs, fill=bug)) +
geom_bar(stat = "identity", width=0.85) +
scale_y_continuous(name="Similarity", breaks = seq(0, 0.5, by = 0.05)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
######################################################################################################
# Plotting precision per similarity threshold
#
######################################################################################################
x <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8)
y <- c(0.7, 0.6, 0.5, 0.2, 0.1, 0.0, 0.0, 0.0, 0.0)
dat <- data.frame(threshold=x, precision=y)
dat %>%
ggplot(aes(x = threshold, y = precision)) +
geom_point() + geom_line() +
scale_y_continuous(name="Precision", breaks = seq(0, 0.8, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.2)) +
theme_bw() + coord_fixed()
n25_data = read.csv("/Users/Arthur/Workspace/BugAnalysisRecommender/patterny/results/inc_004_n_25.csv")
n25_data %>%
ggplot(aes(x = threshold, y = precision)) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="Precision", breaks = seq(0, 1, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
theme_bw() + coord_fixed()
# geom_point(data=n25_data, aes(x = threshold, y = coverage)) + geom_line(data=n25_data, aes(x = threshold, y = coverage)) +
n25_data %>%
ggplot(aes(x = threshold, y = coverage)) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="Coverage", breaks = seq(0, 1, by = 0.2)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
theme_bw() + coord_fixed()
# Current data:
script_sample_data = read.csv("/Users/Arthur/Workspace/BugAnalysisRecommender/patterny/results/partial_results.csv")
script_sample_data = read.csv("/Users/Arthur/Workspace/BugAnalysisRecommender/patterny/results/results_n25.csv")
coverage_data <- script_sample_data %>%
group_by(threshold, n_topics) %>%
summarise(
top_coverage=(
(sum(top_likelihood != "-1") - sum(top_likelihood == "None")) / sum(top_likelihood != "-1")
), n_coverage=(
(sum(n_likelihood != "-1") - sum(n_likelihood == "None")) / sum(n_likelihood != "-1")
)
)
which(script_sample_data$top_precision == "None")
options(digits=8)
sample_data <- filter(script_sample_data, top_precision != "None"
& top_likelihood != "None"
& n_precision != "None"
& n_likelihood != "None")
aux <- c()
for (p in sample_data$top_precision){
aux <- c(aux, as.numeric(p))
}
sample_data$top_precision <- aux
aux <- c()
for (p in sample_data$top_likelihood){
aux <- c(aux, as.numeric(p))
}
sample_data$top_likelihood <- aux
aux <- c()
for (p in sample_data$n_likelihood){
aux <- c(aux, as.numeric(p))
}
sample_data$n_likelihood <- aux
aux <- c()
for (p in sample_data$n_precision){
aux <- c(aux, as.numeric(p))
}
sample_data$n_precision <- aux
plot_data <- summarise(group_by(sample_data, threshold, n_topics),
top_precision=mean(top_precision), top_likelihood=mean(top_likelihood),
n_precision=mean(n_precision), n_likelihood=mean(n_likelihood))
plot_data <- merge(plot_data, coverage_data)
plot_data %>%
ggplot(aes(x = threshold, y = top_likelihood)) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="Likelihood", breaks = seq(0, 1, by = 0.05)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0.0, 1.0, by = 0.1)) +
theme_bw() + theme(text=element_text(size=20)) +
coord_cartesian(ylim=c(0, 0.3))
remove <- c(0.0)
x <- unique(plot_data$top_likelihood)
x <- x[1:37]
x <- x[! x %in% remove ]
y <- y[! y %in% remove ]
x <- sort(x)
y <- sort(y)
wilcox.test(x, y, paired = TRUE)
cohen.d(plot_data$top_likelihood, plot_data$n_likelihood)
d <- c(y, x)
f <- rep(c("N", "Top"), each=37)
mean(y) - mean(x)
sqrt
cohen.d(d ~ f)
fit <- aov(plot_data$top_likelihood~plot_data$n_likelihood)
summary(fit)
plot_data %>%
ggplot(aes(x = threshold, y = n_likelihood)) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="Likelihood", breaks = seq(0, 1, by = 0.05)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0.0, 1.0, by = 0.1)) +
theme_bw() + theme(text=element_text(size=20))+
coord_cartesian(ylim=c(0, 0.3))
plot_data %>%
ggplot(aes(x = threshold, y = n_coverage)) +
geom_point(shape=0) + geom_line(linetype = 1) +
scale_y_continuous(name="Coverage", breaks = seq(0, 1, by = 0.1)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0.0, 1.0, by = 0.1)) +
theme_bw() + theme(text=element_text(size=20))
# Example with two lines
n50_data = read.csv("/Users/Arthur/Workspace/BugAnalysisRecommender/patterny/results/inc_004_n_50.csv")
plot_data %>%
ggplot(aes(x = threshold, y = n_likelihood)) +
#geom_point(data=plot_data, aes(x = threshold, y = n_coverage), shape=1) +
geom_line(data=plot_data, aes(x = threshold, y = n_coverage), linetype = 2) +
#geom_point(shape=0) +
geom_line(linetype = 1) +
scale_y_continuous(name="", breaks = seq(0, 1, by = 0.1)) +
scale_x_continuous(name="Similarity Threshold", breaks = seq(0, 0.8, by = 0.1)) +
scale_color_discrete(name = "Y series", labels = c("n_likelihood", "n_coverage")) +
theme_bw()
getwd()
getwd()
getwd()
setwd('/Users/Arthur/Workspace/cpsc544-hci/survey')
setwd('/Users/Arthur/Workspace/cpsc527-development/measurement/successorships')
require("ggplot2")
require("dplyr")
require("gridExtra")
require("pander")
require("irr")
require("effsize")
serverRecovery <- read.csv(file="./shippy-measurement/output/serverRecovery.csv", head=TRUE, sep=",")
clientWelcome <- read.csv(file="./shippy-measurement/output/clientWelcome.csv", head=TRUE, sep=",")
messageRTT <- read.csv(file="./shippy-measurement/output/messageRTT.csv", head=TRUE, sep=",")
mean(serverRecovery$time)
p <- ggplot(serverRecovery, aes(time)) + stat_ecdf(geom = "step")
p <- p + labs(x = 'Server recovery time (s)')
p <- p + labs(y = 'cdf')
p
p <- ggplot(clientWelcome, aes(time)) + stat_ecdf(geom = "step")
p <- p + labs(x = 'Welcome time (s)')
p <- p + labs(y = 'cdf')
p
p <- ggplot(messageRTT, aes(time)) + stat_ecdf(geom = "step")
p <- p + labs(x = 'Messages RTT (s)')
p <- p + labs(y = 'cdf')
p
messageRTT
